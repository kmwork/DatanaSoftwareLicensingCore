<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>ru.datana</groupId>
    <artifactId>DatanaSoftwareLicensingCore</artifactId>
    <version>001</version>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>
        <app.main.class>ru.datana.demo.license.MainApp</app.main.class>

        <!-- для докера окружение -->
        <dockerRegistry>http://nexus.dkp.lanit.ru:8081/repository/tools-license-libraries/kostya-docker</dockerRegistry>
        <docker.base.image>https://hub.docker.com/layers/fabric8/s2i-java/latest-java11</docker.base.image>
        <!-- КОНЕЦ - для докера окружение -->
    </properties>


    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>io.fabric8</groupId>
                    <artifactId>fabric8-maven-plugin</artifactId>
                    <version>4.4.1</version>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>com.github.wvengen</groupId>
                <artifactId>proguard-maven-plugin</artifactId>
                <version>2.2.0</version>
                <executions>
                    <execution>
                        <phase>package1111111111111111111111111</phase>
                        <goals>
                            <goal>proguard</goal>
                        </goals>
                    </execution>
                </executions>

                <configuration>
                    <obfuscate>true</obfuscate>
                    <injar>${project.build.finalName}.jar</injar>
                    <outjar>${project.build.finalName}-proguard.jar</outjar>
                    <outputDirectory>${project.build.directory}</outputDirectory>
                    <maxMemory>256m</maxMemory>
                    <options>
                        <option>-dontwarn java.**</option>
                        <option>-dontwarn org.**</option>
                        <option>-dontwarn javax.**</option>
                        <option>-keep class java.** { *; }</option>
                        <option>-keep class ru.datana.demo.license.MainApp { *; }</option>
                        <option>-dontoptimize</option>
                        <option>-dontshrink</option>
                    </options>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.2.0</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <classpathPrefix>lib/</classpathPrefix>
                            <mainClass>ru.datana.demo.license.MainApp</mainClass>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jarsigner-plugin</artifactId>
                <version>3.0.0</version>

                <executions>
                    <execution>
                        <phase>install</phase>
                        <goals>
                            <goal>sign</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <archive>${project.basedir}/target/${project.build.finalName}.jar</archive>
                    <keystore>/home/lin/apps/bin-gen-ssl-keys/keystore-client-license.jks</keystore>
                    <alias>DatanaLicense</alias>
                    <storepass>12345678</storepass>
                </configuration>
            </plugin>


            <plugin>
                <groupId>io.fabric8</groupId>

                <artifactId>docker-maven-plugin</artifactId>
                <configuration>
                    <images>
                        <image>
                            <name>datana-kostya-docker:${project.version}-1</name>
                            <alias>${project.artifactId}</alias>
                            <build>
                                <from>${docker.base.image}</from>
                                <assembly>
                                    <basedir>/deployments</basedir>
                                    <descriptor>artifact-with-includes.xml</descriptor>
                                </assembly>
                                <env>
                                    <JAVA_APP_DIR>/deployments</JAVA_APP_DIR>
                                    <JAVA_OPTIONS>-XshowSettings:vm -Duser.timezone=Europe/Moscow -Dfile.encoding=UTF-8</JAVA_OPTIONS>
                                    <JAVA_MAX_MEM_RATIO>0</JAVA_MAX_MEM_RATIO>
                                    <AB_JMX_EXPORTER_CONFIG>/deployments/prometheus-client-config.yml
                                    </AB_JMX_EXPORTER_CONFIG>
                                </env>
                                <ports>
                                    <!-- 8081 для диагностики на жизнеспособность -->
                                    <port>8081</port>

                                    <!-- 80 для findPerson - внешний сервис -->
                                    <port>80</port>

                                    <!-- 8443 точка входа в этот микросервис -->
                                    <port>8443</port>
                                </ports>
                            </build>
                        </image>
                    </images>
                </configuration>
            </plugin>

<!--            <plugin>-->
<!--                &lt;!&ndash; сборка под докер Open-Shift &ndash;&gt;-->
<!--                <groupId>io.fabric8</groupId>-->
<!--                <artifactId>fabric8-maven-plugin</artifactId>-->
<!--                <executions>-->
<!--                    <execution>-->
<!--                        <id>fmp</id>-->
<!--                        <goals>-->
<!--                            <goal>resource</goal>-->
<!--                            <goal>build</goal>-->
<!--                        </goals>-->
<!--                    </execution>-->
<!--                </executions>-->
<!--                <configuration>-->
<!--                    <generateRoute>false</generateRoute>-->
<!--                    <images>-->
<!--                        <image>-->
<!--                            <name>kostyadocker:1</name>-->
<!--                            <alias>${project.artifactId}</alias>-->
<!--                            <build>-->
<!--&lt;!&ndash;                                <from>${docker.base.image}</from>&ndash;&gt;-->
<!--                                <assembly>-->
<!--                                    <basedir>/deployments</basedir>-->
<!--&lt;!&ndash;                                    <descriptor>artifact-with-includes.xml</descriptor>&ndash;&gt;-->
<!--                                </assembly>-->
<!--                                <env>-->
<!--                                    <JAVA_APP_DIR>/deployments</JAVA_APP_DIR>-->
<!--                                    <JAVA_OPTIONS>-XshowSettings:vm -Duser.timezone=Europe/Moscow -Dfile.encoding=UTF-8</JAVA_OPTIONS>-->
<!--                                    <JAVA_MAX_MEM_RATIO>0</JAVA_MAX_MEM_RATIO>-->
<!--&lt;!&ndash;                                    <AB_JMX_EXPORTER_CONFIG>/deployments/prometheus-client-config.yml&ndash;&gt;-->
<!--&lt;!&ndash;                                    </AB_JMX_EXPORTER_CONFIG>&ndash;&gt;-->
<!--                                </env>-->
<!--                                <ports>-->
<!--                                    &lt;!&ndash; 8081 для диагностики на жизнеспособность &ndash;&gt;-->
<!--                                    <port>8081</port>-->

<!--                                    &lt;!&ndash; 80 для findPerson - внешний сервис &ndash;&gt;-->
<!--                                    <port>80</port>-->

<!--                                    &lt;!&ndash; 8443 точка входа в этот микросервис &ndash;&gt;-->
<!--                                    <port>8443</port>-->
<!--                                </ports>-->
<!--                            </build>-->
<!--                        </image>-->
<!--                    </images>-->
<!--                    <skipResourceValidation>true</skipResourceValidation>-->
<!--                </configuration>-->
<!--            </plugin>-->
        </plugins>
    </build>
</project>